import type { albumType, trackType, lyricsType, albumTracksType, showType, playlistInfo, playlistTracksType, playlistChannelType, channelSearchType, artistInfoType, discographyType, profileType, searchType, trackTypePublicApi, albumTypePublicApi, userType } from '../types';
/**
 * @param {String} sng_id song id
 */
export declare const getTrackInfoPublicApi: (sng_id: string) => Promise<trackTypePublicApi>;
/**
 * @param {String} alb_id album id
 */
export declare const getAlbumInfoPublicApi: (alb_id: string) => Promise<albumTypePublicApi>;
/**
 * @param {String} sng_id song id
 */
export declare const getTrackInfo: (sng_id: string) => Promise<trackType>;
/**
 * @param {String} sng_id song id
 */
export declare const getLyrics: (sng_id: string) => Promise<lyricsType>;
/**
 * @param {String} alb_id album id
 */
export declare const getAlbumInfo: (alb_id: string) => Promise<albumType>;
/**
 * @param {String} alb_id user id
 */
export declare const getAlbumTracks: (alb_id: string) => Promise<albumTracksType>;
/**
 * @param {String} playlist_id playlist id
 */
export declare const getPlaylistInfo: (playlist_id: string) => Promise<playlistInfo>;
/**
 * @param {String} playlist_id playlist id
 */
export declare const getPlaylistTracks: (playlist_id: string) => Promise<playlistTracksType>;
/**
 * @param {String} art_id artist id
 */
export declare const getArtistInfo: (art_id: string) => Promise<artistInfoType>;
/**
 * @param {String} art_id artist id
 * @param {String} nb number of total song to fetch
 */
export declare const getDiscography: (art_id: string, nb?: number) => Promise<discographyType>;
/**
 * @param {String} user_id user id
 */
export declare const getProfile: (user_id: string) => Promise<profileType>;
/**
 * @param {String} artist artist name
 * @param {String} song song name
 * @param {String} nb number of items to fetch
 */
export declare const searchAlternative: (artist: string, song: string, nb?: number) => Promise<searchType>;
declare type searchTypesProp = 'ALBUM' | 'ARTIST' | 'TRACK' | 'PLAYLIST' | 'RADIO' | 'SHOW' | 'USER' | 'LIVESTREAM' | 'CHANNEL';
/**
 * @param {String} query search query
 * @param {Array} types search types
 * @param {Number} nb number of items to fetch
 */
export declare const searchMusic: (query: string, types?: searchTypesProp[], nb?: number) => Promise<searchType>;
/**
 * Get details about current user
 */
export declare const getUser: () => Promise<userType>;
/**
 * Get list of channles
 */
export declare const getChannelList: () => Promise<channelSearchType>;
/**
 * @param {String} SHOW_ID show id
 * @param {Number} NB number of items to fetch
 * @param {Number} START start index
 */
export declare const getShowInfo: (SHOW_ID: string, NB?: number, START?: number) => Promise<showType>;
/**
 * Get details about a playlist channel
 */
export declare const getPlaylistChannel: (page: string) => Promise<playlistChannelType>;
export {};
