"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initDeezerApi = void 0;
const axios_1 = __importDefault(require("axios"));
const delay_1 = __importDefault(require("delay"));
let user_arl = '1c6e6e579b49d7228fc990dd31a711062a59d2b0439873af8510d4c272c43ed01634ddbdb9441a9e10f6e5ec34034c5f3cba4b521434063f6582524d083e98e4a3c0ae38ceac15ee53600ae7d3ae24c0653ab3a38807b322210bcc62dfa22022';
const instance = axios_1.default.create({
    baseURL: 'https://api.deezer.com/1.0',
    withCredentials: true,
    timeout: 15000,
    headers: {
        Accept: '*/*',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'en-US',
        'Cache-Control': 'no-cache',
        'Content-Type': 'application/json; charset=UTF-8',
        'User-Agent': 'Deezer/8.32.0.2 (iOS; 14.4; Mobile; en; iPhone10_5)',
    },
    params: {
        version: '8.32.0',
        api_key: 'ZAIVAHCEISOHWAICUQUEXAEPICENGUAFAEZAIPHAELEEVAHPHUCUFONGUAPASUAY',
        output: 3,
        input: 3,
        buildId: 'ios12_universal',
        screenHeight: '480',
        screenWidth: '320',
        lang: 'en',
    },
});
const initDeezerApi = async (arl) => {
    arl = "33ac6fa0b48d164d4fea03615cb19d87183c0fd4f47cc34da64fe9ca4ebd6d8e6fcdb4718fe1573ecc89cb6c29e723b6470bad4571d400f6f7595ff45d7a94264644c5472a229f0b267b1c7d373eb063fffbd2357ba7fe2c0b6c6a7c73178300";
    if (arl.length !== 192) {
        throw new Error(`Invalid arl. Length should be 192 characters. You have provided ${arl.length} characters.`);
    }
    user_arl = arl;
    console.log("I can't seem to get why you are not working here, but you do through cmd. Checking the compiled sources to compare.")
    const { data } = await instance.get('https://www.deezer.com/ajax/gw-light.php', {
        params: { method: 'deezer.ping', api_version: '1.0', api_token: '' },
        headers: { cookie: 'arl=' + arl },
    });
    instance.defaults.params.sid = data.results.SESSION;
    return data.results.SESSION;
};
exports.initDeezerApi = initDeezerApi;
// Add a request interceptor
instance.interceptors.response.use(async (response) => {
    if (response.data.error && Object.keys(response.data.error).length > 0) {
        if (response.data.error.NEED_API_AUTH_REQUIRED) {
            await exports.initDeezerApi(user_arl);
            return await instance(response.config);
        }
        else if (response.data.error.code === 4) {
            await delay_1.default.range(1000, 1500);
            return await instance(response.config);
        }
    }
    return response;
});
exports.default = instance;

















/*"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.initDeezerApi = void 0;
const axios_1 = __importDefault(require("axios"));
const delay_1 = __importDefault(require("delay"));
let user_arl = '7b76232e393c63abd3ba151c6e3f2e3d0a3bd272b268f0482c8f6c2ebcc170984c13800745a53d3e27baa88bc3922ef22c5342e4e1ea1353a00d9156930a4bf462884d53215289420031507d65295aab971e75d1611c77d13df34b5e491fb2be';



const instance_params = 
    {
        version: '8.32.0',
        api_key: 'ZAIVAHCEISOHWAICUQUEXAEPICENGUAFAEZAIPHAELEEVAHPHUCUFONGUAPASUAY',
        output: 3,
        input: 3,
        buildId: 'ios12_universal',
        screenHeight: '480',
        screenWidth: '320',
        lang: 'en',
    }
const instance_headers = 
    {
        'Accept': '*//*',
        'Access-Control-Allow-Origin': '*',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'en-US',
        'Cache-Control': 'no-cache',
        'Content-Type': 'application/json; charset=UTF-8',
        'User-Agent': 'Deezer/8.32.0.2 (iOS; 14.4; Mobile; en; iPhone10_5)',
    }
const instance = axios_1.default.create({
    baseURL: 'https://api.deezer.com/1.0',
    withCredentials: true,
    timeout: 15000,
    headers: {...instance_headers},
    params: {...instance_params},
});
const initDeezerApi = async (arl) => {
    if (arl.length !== 192) {
        throw new Error(`Invalid arl. Length should be 192 characters. You have provided ${arl.length} characters.`);
    }
    user_arl = arl;
    console.log("user_arl: ", user_arl);
    const { data } = await axios_1.default.get('https://www.deezer.com/ajax/gw-light.php', {
        params: { method: 'deezer.ping',
        api_version: '1.0', api_token: '', ...instance_params, },
        headers: { cookie: 'arl=' + arl, ...instance_headers, },
        timeout: 15000, withCredentials: true,
    });
    console.log("initDeezerApi| data: ", data);
    instance.defaults.params.sid = data.results.SESSION;
    return data.results.SESSION;
};
exports.initDeezerApi = initDeezerApi;
// Add a request interceptor
instance.interceptors.response.use(async (response) => {
    if (response.data.error && Object.keys(response.data.error).length > 0) {
        if (response.data.error.NEED_API_AUTH_REQUIRED) {
            await (0, exports.initDeezerApi)(user_arl);
            return await instance(response.config);
        }
        else if (response.data.error.code === 4) {
            await delay_1.default.range(1000, 1500);
            return await instance(response.config);
        }
    }
    return response;
});
exports.default = instance;
*/